<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<ProxyEndpoint name="TelcoAPIProxyEndpoint">
   <Description>TelcoAPI</Description>
   <FaultRules>
      <FaultRule name="TrafficManagementFaultHandling">
         <Step>
            <Name>SF-TrafficManagementFault</Name>
         </Step>
         <Condition>((ratelimit.SpikeArrest.failed equals true) or ((ratelimit.QuotaAtProductLevel.failed equals true)))</Condition>
      </FaultRule>
   </FaultRules>
   <DefaultFaultRule name="All">
      <AlwaysEnforce>true</AlwaysEnforce>
      <Step>
         <Name>SF-DefaultFaultCallout</Name>
      </Step>
      <AlwaysEnforce>true</AlwaysEnforce>
   </DefaultFaultRule>
   <PreFlow name="PreFlow">
      <Request>
         <Step>
            <Condition>(log.proxyVerb != "OPTIONS")</Condition>
            <Name>SF-SpikeArrestCallout-Environment</Name>
         </Step>
      </Request>
      <Response>
      </Response>
   </PreFlow>
   <Flows>
      <Flow name="WrongAccept">
         <Description/>
         <Request>
            <Step>
               <Name>SF-Proxy-Current-Flow-Name</Name>
            </Step>
            <Step>
               <Name>cf-Fault-Unsupported-AcceptType</Name>
            </Step>
         </Request>
         <Response/>
         <Condition>(log.proxyVerb != "OPTIONS") and (log.proxyVerb != "GET") and (!(log.Accept JavaRegex "(text\/xml)(;.*)|(.*;)(text\/xml)(;.*)|text\/xml|(.*;)(text\/xml)|(application\/xml)(;.*)|(.*;)(application\/xml)(;.*)|application\/xml|(.*;)(application\/xml)|(application\/json)(;.*)|(.*;)(application\/json)(;.*)|application\/json|(.*;)(application\/json)"))</Condition>
      </Flow>
      <Flow name="WrongContentType">
         <Description/>
         <Request>
            <Step>
               <Name>SF-Proxy-Current-Flow-Name</Name>
            </Step>
            <Step>
               <Name>cf-Fault-Unsupported-ContentType</Name>
            </Step>
         </Request>
         <Response/>
         <Condition>(log.proxyVerb != "OPTIONS") and (log.proxyVerb != "GET") and ((!(request.content = "")) and (!(request.content is null)) and !(log.Content-Type JavaRegex "(text\/xml)(;.*)|(.*;)(text\/xml)(;.*)|text\/xml|(.*;)(text\/xml)|(application\/xml)(;.*)|(.*;)(application\/xml)(;.*)|application\/xml|(.*;)(application\/xml)|(application\/json)(;.*)|(.*;)(application\/json)(;.*)|application\/json|(.*;)(application\/json)"))</Condition>
      </Flow>
      <Flow name="getCustomerList">
         <Request>
            <Step>
               <Name>cf-Assign-Metadata-Variables-getCustomerList</Name>
            </Step>
            <Step>
               <Name>cf-Assign-Routing-Variables-getCustomerList</Name>
            </Step>
         </Request>
         <Response>
         </Response>
         <Condition>(proxy.pathsuffix MatchesPath &quot;/customers&quot;) and (request.verb= &quot;GET&quot;)</Condition>
      </Flow>
      <Flow name="addNewCustomer">
         <Request>
            <Step>
               <Name>cf-Assign-Metadata-Variables-addNewCustomer</Name>
            </Step>
            <Step>
               <Name>cf-Assign-Routing-Variables-addNewCustomer</Name>
            </Step>
         </Request>
         <Response>
         </Response>
         <Condition>(proxy.pathsuffix MatchesPath &quot;/customers&quot;) and (request.verb= &quot;POST&quot;)</Condition>
      </Flow>
      <Flow name="getCustomerById">
         <Request>
            <Step>
               <Name>cf-Assign-Metadata-Variables-getCustomerById</Name>
            </Step>
            <Step>
               <Name>cf-Assign-Routing-Variables-getCustomerById</Name>
            </Step>
         </Request>
         <Response>
         </Response>
         <Condition>(proxy.pathsuffix MatchesPath &quot;/customers/{customerId}&quot;) and (request.verb= &quot;GET&quot;)</Condition>
      </Flow>
      <Flow name="updateCustomerById">
         <Request>
            <Step>
               <Name>cf-Assign-Metadata-Variables-updateCustomerById</Name>
            </Step>
            <Step>
               <Name>cf-Assign-Routing-Variables-updateCustomerById</Name>
            </Step>
         </Request>
         <Response>
         </Response>
         <Condition>(proxy.pathsuffix MatchesPath &quot;/customers/{customerId}&quot;) and (request.verb= &quot;PUT&quot;)</Condition>
      </Flow>
      <Flow name="deleteCustomerById">
         <Request>
            <Step>
               <Name>cf-Assign-Metadata-Variables-deleteCustomerById</Name>
            </Step>
            <Step>
               <Name>cf-Assign-Routing-Variables-deleteCustomerById</Name>
            </Step>
         </Request>
         <Response>
         </Response>
         <Condition>(proxy.pathsuffix MatchesPath &quot;/customers/{customerId}&quot;) and (request.verb= &quot;DELETE&quot;)</Condition>
      </Flow>
      <Flow name="unknown-resource">
         <Request>
            <Step>
               <Name>cf-Unknown-Resource</Name>
            </Step>
         </Request>
         <Response/>
      </Flow>
   </Flows>
   <PostFlow name="PostFlow">
      <Request></Request>
      <Response>
         <Step>
            <Name>SF-Compliance-Callout</Name>
         </Step>
      </Response>
   </PostFlow>
   <PostClientFlow>
        <Request/>
        <Response>
        </Response>
    </PostClientFlow>
   <HTTPProxyConnection>
      <BasePath>/v1</BasePath>
      <VirtualHost>default</VirtualHost>
      <VirtualHost>secure</VirtualHost>
   </HTTPProxyConnection>
   <RouteRule name="NoRoute">
      <Condition>(request.verb == "OPTIONS")</Condition>
   </RouteRule>
   <RouteRule name="TelcoAPI">
      <Condition>(target.route.service = &quot;TelcoAPI&quot;)</Condition>
      <TargetEndpoint>TelcoAPI</TargetEndpoint>
   </RouteRule>
</ProxyEndpoint>
